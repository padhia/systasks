{% from 'util.jinja2' import date_range %}

{% macro objects_cds_by_database(source=True, transcend=True, weekly=True, total=True, top10=True, save=True) -%}
{% if source %}
- name: collect database CDS into db_objects_cds VT
  connect: source
  execute:
    sql: |
      create multiset volatile table db_objects_cds, no log as (
        SELECT s.LogDate
            , COALESCE(s.DatabaseName, '*** Total ***') AS DBName
            , cast( {{ spoolpct | d(0.25) }} as decimal(4,3)) as SpoolPct
            , case when s.DatabaseName is null
                    then '** Entire Teradata System (minus '||
                    cast(cast(SpoolPct*100 as decimal(4,1) format'99.9') as char(4)) ||'% spool from MaxPerm) **'
                else '' end as CommentString
            , cast(sum(MaxPerm)/1e9 as decimal(18,3))
                * case when s.DatabaseName is null then (1-SpoolPct) else 1.000 end as MaxPermGB
            , ZeroIfNull(cast(NullifZero(sum(CurrentPerm))/1e9 as decimal(18,3))) as CurrentPermGB
            , ZeroIfNull(CurrentPermGB/NullIfZero(MaxPermGB)) as FilledPct
            , rank() over (partition by s.LogDate order by CurrentPermGB desc) as CDSRank
        FROM (
          Select sum(MaxPerm) as MaxPerm
              , sum(CurrentPerm) as CurrentPerm
              , DatabaseName
          {% if pdcr %}
              , LogDate
          FROM PDCRInfo.DatabaseSpace_Hst
          WHERE LogDate {{ date_range() }}
          GROUP BY 3,4
          {% else %}
              , CURRENT_DATE AS LogDate
          FROM dbc.DiskSpaceV
          GROUP BY 3
          {% endif %}
        ) s
        GROUP BY s.LogDate, rollup(s.Databasename)
      ) with data primary index(LogDate, DBName) on commit preserve rows

{% if save %}
- name: save db_objects_cds.csv
  connect: source
  export:
    file: db_objects_cds.csv
    sql: select * from db_objects_cds
{% endif %}

{% if weekly %}
- name: build formatted return for pptx operations
  connect: source
  execute:
    sql: |
      create volatile table db_objects_cds_week_formatted as (
        select '{{ siteid }}'                                                    as Site_ID
            , (cast(YearNumber_of_Calendar(LogDate,'ISO') as int)*1000) +
               (cast(MonthNumber_of_Year   (LogDate,'ISO') as int)*10) +
               (cast(WeekNumber_of_Month   (LogDate,'ISO') as int))              as "Week ID"
            , DBName                                                             as "DB Name"
            , CAST(SpoolPct  AS DECIMAL(4,3))                                    as "Spool Pct"
            , CommentString                                                      as "Comments"
            , CAST(avg(MaxPermGB) AS DECIMAL(10,3))                              as "MaxPerm GB"
            , CAST(avg(CurrentPermGB) AS DECIMAL(10,3))                          as "CurrPerm GB"
            , CAST("CurrPerm GB" / nullifzero("MaxPerm GB") AS DECIMAL(4,3))     as "Fill Pct"
            , rank() over(partition by "Week ID" order by "CurrPerm GB" desc)-1  as "CurrPerm Rank"
        from db_objects_cds
        group by "Week ID", "DB Name", "Spool Pct", "Comments"
      ) with data no primary index on commit preserve rows

{% if save %}
- name: save db_objects_cds_week_formatted
  connect: source
  export:
    file: db_objects_permspace-all.csv
    sql: |
      Select '{{ siteid }}' as Site_ID
          , "Week ID" as Week_ID
          , "DB Name" as DatabaseName
          , "Spool Pct" as Spool_Pct
          , "Comments" as CommentString
          , "MaxPerm GB" as MaxPerm_GB
          , "CurrPerm GB" as CurrPerm_GB
          , "Fill Pct" as Fill_Pct
          , "CurrPerm Rank" as CurrPerm_Rank
      from db_objects_cds_week_formatted as cds
{% endif %}
{% endif %}

{% if save and total %}
- name: save db_objects_permspace-total.csv
  connect: source
  export:
    file: db_objects_permspace-total.csv
    sql: |
      Select '{{ siteid }}' as Site_ID, cds.*
      from db_objects_cds_week_formatted as cds
      where "DB Name" = '*** Total ***'
{% endif %}

{% if save and top10 %}
- name: save db_objects_permspace_top10.csv
  connect: source
  export:
    file: db_objects_permspace_top10.csv
    sql: |
      Select '{{ siteid }}' as Site_ID, cds.*
      from db_objects_cds_week_formatted as cds
      where "DB Name" <> '*** Total ***'
      qualify "CurrPerm Rank" <= 10
          and "Week ID" = Max("Week ID") over()
{% endif %}
{% endif %}

{% if transcend and weekly and save %}
- name: upload db_objects_cds_week_formatted
  connect: transcend
  import:
    file: db_objects_permspace-all.csv
    table: {{ db_stg | default('adlste_coa_stg') }}.stg_dat_permspace_week

- name: call sp_dat_permspace_week
  connect: transcend
  call:
    proc: {{ db_coa | default('adlste_coa') }}.sp_dat_permspace_week
    params:
      - v1
{% endif %}

{% endmacro %}
